{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext } from \"react\";\nimport { AppContext } from \"../utils/context\";\nimport { fakeFetch } from \"../utils/fetch\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nexport function useCustomFetch() {\n  _s();\n\n  const {\n    cache,\n    validateCache\n  } = useContext(AppContext);\n  const {\n    loading,\n    wrappedRequest\n  } = useWrappedRequest();\n  const fetchWithCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const cacheKey = getCacheKey(endpoint, params);\n    const cacheResponse = cache === null || cache === void 0 ? void 0 : cache.current.get(cacheKey);\n    const newVal = validateCache ? true : false;\n    console.log(\"validateCache:\", newVal);\n\n    if (cacheResponse && !validateCache) {\n      const data = JSON.parse(cacheResponse);\n      return data;\n    }\n\n    const result = await fakeFetch(endpoint, params);\n    cache === null || cache === void 0 ? void 0 : cache.current.set(cacheKey, JSON.stringify(result));\n    return result;\n  }), [cache, validateCache, wrappedRequest]);\n  const fetchWithoutCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const result = await fakeFetch(endpoint, params);\n    return result;\n  }), [wrappedRequest]);\n  const clearCache = useCallback(() => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    cache.current = new Map();\n  }, [cache]);\n  const clearCacheByEndpoint = useCallback(endpointsToClear => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    const cacheKeys = Array.from(cache.current.keys());\n\n    for (const key of cacheKeys) {\n      const clearKey = endpointsToClear.some(endpoint => key.startsWith(endpoint));\n\n      if (clearKey) {\n        cache.current.delete(key);\n      }\n    }\n  }, [cache]);\n  return {\n    fetchWithCache,\n    fetchWithoutCache,\n    clearCache,\n    clearCacheByEndpoint,\n    loading\n  };\n}\n\n_s(useCustomFetch, \"ZgM8DAuGZvQzn8nN0ISQbjcyO7g=\", false, function () {\n  return [useWrappedRequest];\n});\n\nfunction getCacheKey(endpoint, params) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`;\n}","map":{"version":3,"names":["useCallback","useContext","AppContext","fakeFetch","useWrappedRequest","useCustomFetch","cache","validateCache","loading","wrappedRequest","fetchWithCache","endpoint","params","cacheKey","getCacheKey","cacheResponse","current","get","newVal","console","log","data","JSON","parse","result","set","stringify","fetchWithoutCache","clearCache","undefined","Map","clearCacheByEndpoint","endpointsToClear","cacheKeys","Array","from","keys","key","clearKey","some","startsWith","delete"],"sources":["C:/Users/sakib/Downloads/ramp-fe-challenge/ramp-fe-challenge/src/hooks/useCustomFetch.ts"],"sourcesContent":["import { useCallback, useContext, useRef } from \"react\"\nimport { AppContext } from \"../utils/context\"\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\nimport { useWrappedRequest } from \"./useWrappedRequest\"\n\nexport function useCustomFetch() {\n  const { cache, validateCache } = useContext(AppContext)\n  const { loading, wrappedRequest } = useWrappedRequest()\n\n  const fetchWithCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> =>\n      wrappedRequest<TData>(async () => {\n        const cacheKey = getCacheKey(endpoint, params)\n        const cacheResponse = cache?.current.get(cacheKey)\n        const newVal = validateCache ? true : false\n        \n        console.log(\"validateCache:\", newVal)\n        \n        if (cacheResponse && !validateCache) {\n          const data = JSON.parse(cacheResponse);\n          return data as Promise<TData>;\n        }\n\n        const result = await fakeFetch<TData>(endpoint, params)\n        cache?.current.set(cacheKey, JSON.stringify(result))\n        return result\n      }),\n    [cache, validateCache, wrappedRequest]\n  )\n\n  const fetchWithoutCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> =>\n      wrappedRequest<TData>(async () => {\n        const result = await fakeFetch<TData>(endpoint, params)\n        return result\n      }),\n    [wrappedRequest]\n  )\n\n  const clearCache = useCallback(() => {\n    if (cache?.current === undefined) {\n      return\n    }\n\n    cache.current = new Map<string, string>()\n  }, [cache])\n\n  const clearCacheByEndpoint = useCallback(\n    (endpointsToClear: RegisteredEndpoints[]) => {\n      if (cache?.current === undefined) {\n        return\n      }\n\n      const cacheKeys = Array.from(cache.current.keys())\n\n      for (const key of cacheKeys) {\n        const clearKey = endpointsToClear.some((endpoint) => key.startsWith(endpoint))\n\n        if (clearKey) {\n          cache.current.delete(key)\n        }\n      }\n    },\n    [cache]\n  )\n\n  return { fetchWithCache, fetchWithoutCache, clearCache, clearCacheByEndpoint, loading }\n}\n\nfunction getCacheKey(endpoint: RegisteredEndpoints, params?: object) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}